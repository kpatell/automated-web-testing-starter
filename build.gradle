buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    sll*.exclude group: 'log4j', module: 'log4j'
}

repositories {
    mavenCentral()
}

dependencies {
    // SLF4J Logging API
    compile "org.slf4j:slf4j-api:1.7.10"
    compile "org.slf4j:jcl-over-slf4j:1.7.10"   // replaces commons-logging to use slf4j
    compile "org.slf4j:log4j-over-slf4j:1.7.10" // replaces log4j to use slf4
    compile "org.slf4j:jul-to-slf4j:1.7.10"     // replaces java.util.logging to use slf4j

    compile "ch.qos.logback:logback-classic:1.1.2" // core logging implementation
    compile "org.apache.commons:commons-lang3:3.3.2" // commons lang
    compile "commons-io:commons-io:2.4"

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile "org.seleniumhq.selenium:selenium-java:3.141.59"
    compile 'org.seleniumhq.selenium:selenium-chrome-driver:3.141.59'
    compile 'org.seleniumhq.selenium:selenium-support:3.141.59'

    // https://mvnrepository.com/artifact/io.cucumber/cucumber-java
//    compile group: 'io.cucumber', name: 'cucumber-java', version: '5.6.0'
    // https://mvnrepository.com/artifact/io.cucumber/cucumber-junit
//    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: '5.6.0'
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest
//    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

    // test only
    testCompile "junit:junit:4.12"
    testImplementation "junit:junit:4.12"
}

task copyToLib(type: Copy) {
    println "copyToLib"
    into "$buildDir/libs/lib"
    from configurations.compile
}

jar {
    dependsOn { copyToLib }

    archiveBaseName = 'jsk-automation'
    archiveVersion =  '0.1.0'
    into('lib') {
        from "$buildDir/libs/lib"
    }
    manifest {
        attributes (
                // 'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Class-Path': configurations.compile.collect { "lib/" + it.getName() }.join(' '),
                'Main-Class': 'org.jsk.automation.HelloSelenium'
        )
    }
}

test {
    useJUnit()
    maxHeapSize = '1G'
}